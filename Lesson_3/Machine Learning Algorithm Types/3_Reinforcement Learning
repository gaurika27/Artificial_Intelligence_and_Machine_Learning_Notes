Another kind of algorithm that has gained popularity recently is reinforcement learning. Unlike the first two algorithms, this one continuously improves its model by mining feedback from previous iterations. In reinforcement learning, an agent continuously learns, through trial and error, as it interacts in an environment. Reinforcement learning is broadly useful when the reward of an intended outcome is known, but not how to achieve it. That is, the path to achieving the outcome isn't knownâ€”and that path requires a lot of trial and error to discover.

For example, in the AWS DeepRacer simulator, the agent is the virtual car, and the environment is a virtual racetrack. The actions are throttle and steering inputs to the car. The goal is completing the racetrack as quickly as possible and without deviating from the track.
